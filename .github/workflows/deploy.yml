name: Build, Push, and Deploy Nginx Website

on:
  push:
    branches:
      - master

jobs:
  build-deploy:
    runs-on: self-hosted  # Use the self-hosted runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: sanjaypramod
          password: sanjaypramod1234

      - name: Build and Push Docker Image
        run: |
          docker build -t sanjaypramod/nginx-website:latest .
          docker push sanjaypramod/nginx-website:latest

      - name: Deploy to K3s on EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: 13.203.66.36                 # Replace with your EC2 instance's public IP
          username: ubuntu                   # Replace with the correct user for your EC2 instance
          key: ${{ secrets.EC2_SSH_KEY }}    # Reference the private key stored in GitHub Secrets
          debug: true                        # Enable debug mode to see detailed logs
          script: |
            echo "SSH connection successful."
            kubectl apply -f <<EOF
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: nginx-website
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app: nginx-website
              template:
                metadata:
                  labels:
                    app: nginx-website
                  spec:
                    containers:
                    - name: nginx
                      image: sanjaypramod/nginx-website:latest
                      ports:
                      - containerPort: 80
            ---
            apiVersion: v1
            kind: Service
            metadata:
              name: nginx-service
            spec:
              type: LoadBalancer
              selector:
                app: nginx-website
              ports:
                - protocol: TCP
                  port: 80
                  targetPort: 80
            EOF
